<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- 此时只需要Dao的接口，而其实现是没有使用到的，他直接用sqlSessionFactory来进行包装处理了 
	<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.xtgl.yhgl.dao.IUserDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> 
	
	<bean id="cdxxDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.cdgl.dao.ICdxxDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> 
	
	<bean id="roleDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.jsgl.dao.IRoleDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> 
	
	<bean id="jssqDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.jssq.dao.IJssqDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	
	<bean id="qjglDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.qjgl.dao.IQjglDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>  
	
	<bean id="wfRwDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.common.wf.rw.dao.IWfRwDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> 
	-->
	
	<!-- 存在具体的dao实现类 -->
	<bean id="userDao" class="com.icanft.xtgl.yhgl.dao.impl.UserDaoImpl"
		parent="defaultDao">
	</bean> 
	
	<bean id="cdxxDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.cdgl.dao.ICdxxDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> 
	
	<bean id="roleDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.jsgl.dao.IRoleDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> 
	
	<bean id="jssqDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.jssq.dao.IJssqDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	
	<bean id="qjglDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.qjgl.dao.IQjglDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>  
	
	<bean id="wfRwDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.icanft.common.wf.rw.dao.IWfRwDao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> 
	
</beans>