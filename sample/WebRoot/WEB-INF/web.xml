<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Contacts web application
  -
  -->

<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>sample</display-name>

	<!--
	  - Location of the XML file that defines the root application context
	  - Applied by ContextLoaderListener.
	  -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring-db-config.xml,
	    	/WEB-INF/spring-activiti-config.xml,
	    	/WEB-INF/spring-mybatis-config.xml,
	    	/WEB-INF/spring-dao-config.xml,
	    	/WEB-INF/spring-service-config.xml,
	    	<!-- 
			classpath:applicationContext-common-business.xml
			classpath:applicationContext-common-authorization.xml -->
			classpath:applicationContext-security.xml,
			classpath*:/META-INF/conf/spring/mqm-*.xml
		</param-value>
	</context-param>

   <!-- Nothing below here needs to be modified -->

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>contacts.root</param-value>
	</context-param>

	<filter>
		<filter-name>localizationFilter</filter-name>
		<filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
		<init-param>
			<param-name>excludedPages</param-name>
			<param-value>/webservice/*</param-value>    
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>localizationFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <url-pattern>*.do</url-pattern>
	</filter-mapping>
	<!--	
	  - Loads the root application context of this web app at startup.
	  - The application context is then available via
	  - WebApplicationContextUtils.getWebApplicationContext(servletContext).
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>-->
	<listener>
		<listener-class>com.mqm.frame.infrastructure.startup.ContextInit</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextCleanupListener</listener-class>
	</listener>
	<!-- 这个监听器实现了HttpSessionListener接口，主要监听sessionCreated、sessionDestroyed事件。 -->
	<listener>
	    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  	</listener> 
  	<!--<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	设置session超时的监听器  -->
	<listener>     
	      <listener-class>     
	             com.icanft.common.listener.SessionListener
	      </listener-class>     
	</listener>
	<!--设置session超时时间为1分钟  -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	
	<!-- cxf -->
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<display-name>CXFServlet</display-name>
		<servlet-class>
          org.apache.cxf.transport.servlet.CXFServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/webservice/*</url-pattern>
	</servlet-mapping>
	
  <!--
	- Provides core MVC application controller. See contacts-servlet.xml.
	-->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<url-pattern>/</url-pattern>
	 </servlet-mapping>

  <!--
	- Provides web services endpoint. See remoting-servlet.xml.
	-->
	<servlet>
		<servlet-name>remoting</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>remoting</servlet-name>
		<url-pattern>/remoting/*</url-pattern>
	</servlet-mapping>

	 <welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>403</error-code>
		<location>/error.html</location>
	</error-page>

</web-app>
