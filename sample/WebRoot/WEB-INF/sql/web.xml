<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>jxjymvc</display-name>

	<!-- 指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
	    	/WEB-INF/spring-db-config.xml,
	    	/WEB-INF/spring-activiti-config.xml,
	    	/WEB-INF/spring-mybatis-config.xml,
	    	/WEB-INF/spring-dao-config.xml,
	    	/WEB-INF/spring-service-config.xml,
	    	classpath:applicationContext-security.xml,
	    	classpath*:/META-INF/conf/spring/mqm-*.xml
	    </param-value>
	</context-param>
	
	<!-- spring监听器（第二启动），监听springMvc环境 -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	
	<!-- spring 安全 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- springMvc编码拦截器（第三启动），springMvc内置的编码拦截器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>

		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>

	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- springMvc前置总控制器（第四启动），在分发其它的控制器前都要经过这个总控制器 -->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-servlet.xml</param-value>
		</init-param>

		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>

	<listener>  
	   <listener-class>  
	       org.springframework.web.util.Log4jConfigListener  
	   </listener-class>  
	</listener> 

	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- 出错页面定义 -->   
	<error-page>  
	    <error-code>500</error-code>  
	    <location>/500.jsp</location>  
	</error-page>  
	<error-page>  
	    <error-code>404</error-code>  
	    <location>/404.jsp</location>  
	</error-page>
	
	<!--系统启动初始化的监听器  
	<listener>     
	      <listener-class>     
	             com.icanft.common.listener.ProjectInitListener
	       </listener-class>     
	</listener>-->
	<listener>
		<listener-class>org.springframework.web.context.ContextCleanupListener</listener-class>
	</listener>
	<!-- 这个监听器实现了HttpSessionListener接口，主要监听sessionCreated、sessionDestroyed事件。 -->
	<listener>
	    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  	</listener> 

	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!--设置session超时的监听器  -->
	<listener>     
	      <listener-class>     
	             com.icanft.common.listener.SessionListener
	      </listener-class>     
	</listener>
	<!--设置session超时时间为1分钟  -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
</web-app>